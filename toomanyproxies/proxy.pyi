from typing import Any, NoneType

class Proxy:
    __annotations__: dict
    def _whitelist_container(self, *args, **kwargs) -> Any: ...
    __doc__: str
    verbose: bool
    _factory: NoneType
    _whitelist: list
    _whitelisted_prefixes: list
    def _proxied_getattr(self, *args, **kwargs) -> Any: ...
    Dummy: Proxy
    __module__: str
    __firstlineno__: int
    def __init__(self, *args, **kwargs) -> Any: ...
    def __getattr__(self, *args, **kwargs) -> Any: ...
    __static_attributes__: tuple
    __dict__: getset_descriptor
    __weakref__: getset_descriptor
    def __new__(self, *args, **kwargs) -> Any: ...
    def __repr__(self, *args, **kwargs) -> Any: ...
    def __hash__(self, *args, **kwargs) -> Any: ...
    def __str__(self, *args, **kwargs) -> Any: ...
    def __getattribute__(self, *args, **kwargs) -> Any: ...
    def __setattr__(self, *args, **kwargs) -> Any: ...
    def __delattr__(self, *args, **kwargs) -> Any: ...
    def __lt__(self, *args, **kwargs) -> Any: ...
    def __le__(self, *args, **kwargs) -> Any: ...
    def __eq__(self, *args, **kwargs) -> Any: ...
    def __ne__(self, *args, **kwargs) -> Any: ...
    def __gt__(self, *args, **kwargs) -> Any: ...
    def __ge__(self, *args, **kwargs) -> Any: ...
    def __reduce_ex__(self, *args, **kwargs) -> Any: ...
    def __reduce__(self, *args, **kwargs) -> Any: ...
    def __getstate__(self, *args, **kwargs) -> Any: ...
    def __subclasshook__(self, *args, **kwargs) -> Any: ...
    def __init_subclass__(self, *args, **kwargs) -> Any: ...
    def __format__(self, *args, **kwargs) -> Any: ...
    def __sizeof__(self, *args, **kwargs) -> Any: ...
    def __dir__(self, *args, **kwargs) -> Any: ...
    __class__: getset_descriptor